{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAmBeA,EAhBE,SAAC,GAAe,EAAbC,OAEZ,MAAM,IAAIC,MAAM,aCQTC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACA,uBAAOA,UAAU,oCAAoCC,KAAK,SAC1DC,YAAY,gBACZC,SAAUJ,OCKHK,EAVA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCqBJC,G,wDAvBf,WAAYN,GAAQ,IAAD,8BACf,cAAOA,IAEFO,MAAQ,CACTC,UAAU,GAJC,E,qDAQnB,SAAkBC,EAAOC,GACzBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAGzB,WACI,OAAIG,KAAKJ,MAAMC,SACP,kDAELG,KAAKX,MAAMK,a,GAjBSQ,cC+CZC,E,kDAxCb,aAAe,IAAD,8BACV,gBAaNC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,SAbvC,EAAKX,MAAQ,CACXjB,OAAQ,GACRG,YAAa,IAJL,E,qDAQhB,WAAqB,IAAD,OAChB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAQvC,WACI,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,YACV+B,EAAelC,EAAOmC,QAAO,SAAAC,GAC/B,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAEzD,OAAQtC,EAAOwC,OAEf,sBAAKnC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACG,cAAC,EAAD,CAAUzB,OAAQkC,WANxB,6C,GA1BKX,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACG,cAAC,EAAD,IAASC,SAASC,eAAe,SAM7CX,M","file":"static/js/main.32b3699b.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    if(true){\n        throw new Error('Nooooooo');\n    }\n    const cardComponent = robots.map((user,i) => {\n    return  <Card key={i} id={robots[i].id} name={robots[i].name} \n    email={robots[i].email}/>\n    });\nreturn (\n    <React.StrictMode>\n       {cardComponent}\n    </React.StrictMode>\n    );\n}\n\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n        <input className=\"pa3 ba b--green bg-lightest-blue \" type=\"search\" \n        placeholder=\"Search robots\"   \n        onChange={searchChange}\n        />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height:'500px'}}>\n            {props.children}\n        </div>\n\n    )\n\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\nconstructor(props) {\n    super (props);\n\n    this.state = {\n        hasError: false\n    }\n\n}\ncomponentDidCatch(error, info) {\nthis.setState({hasError: true})\n}\n\nrender() {\n    if (this.state.hasError) {\n    return  <h1>That is not good</h1>\n}\nreturn this.props.children\n}\n\n}\n\n\n\nexport default ErrorBoundry;","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from '../components/Scroll';\nimport '../containers/App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n\nclass App extends Component {\n  constructor() {\n      super() \n      this.state = {\n        robots: [],\n        searchfield: ''\n      }\n  }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users => {this.setState({robots: users})});\n}\n\nonSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n   \n}\n\n    render () {\n        const { robots, searchfield } = this.state; //destructuring!!!\n        const filterRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n             <h1>Loading</h1> :\n        <div className=\"tc\">\n            <h1 className='f1' >RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <ErrorBoundry>\n                   <CardList robots={filterRobots}/> \n                </ErrorBoundry>\n            </Scroll>\n                \n        </div>\n              }\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n            <App /> ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}